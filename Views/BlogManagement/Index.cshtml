@model IEnumerable<Netflex.Models.Blog.BlogViewModel>

@{
    ViewData["Title"] = "Blog Management";
    Layout = "~/Views/Admin/_AdminDashboard.cshtml";
}

<div class="container-fluid px-4">
    <div class="d-flex justify-content-between align-items-center my-4">
        <h2 class="fw-bold text-primary">📑 Blog Management</h2>
        <a class="btn btn-success btn-lg" asp-action="Create"><i class="fa fa-plus"></i> Create New</a>
    </div>

    <!-- Filter & Search Bar -->
    <div class="row mb-4">
        <div class="col-md-6">
            <input type="text" id="searchInput" class="form-control border-primary shadow-sm"
                placeholder="🔍 Search by title...">
        </div>
        <div class="col-md-3">
            <input type="date" id="filterDate" class="form-control border-secondary shadow-sm">
        </div>
        <div class="col-md-3">
            <button class="btn btn-outline-secondary w-100" onclick="resetFilters()">Reset Filters</button>
        </div>
    </div>

    <!-- Responsive Table with Fixed Header -->
    <div class="table-responsive-lg" style="max-height: 600px; overflow-y: auto;">
        <table class="table table-hover table-bordered align-middle shadow-lg table-lg">
            <thead class="table-dark position-sticky top-0">
                <tr>
                    <th style="min-width: 150px;">Title</th>
                    <th style="min-width: 300px;">Content</th>
                    <th style="min-width: 150px; text-align: center;">Thumbnail</th>
                    <th style="min-width: 100px;">Created At</th>
                    <th style="min-width: 150px;">Creater ID</th>
                    <th style="min-width: 120px; text-align: center;">Actions</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var item in Model)
                {
                    <tr>
                        <td class="text-truncate" style="max-width: 250px;">
                            @Html.DisplayFor(modelItem => item.Title)
                        </td>
                        <td class="text-truncate" style="max-width: 400px;">
                            @Html.Raw(item.Content)
                        </td>
                        <td class="text-center">
                            @if (!string.IsNullOrEmpty(item.Thumbnail))
                            {
                                <img src="@item.Thumbnail" alt="Thumbnail" class="img-fluid rounded"
                                    style="max-width: 100px; height: auto;" />
                            }
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.CreatedAt)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.CreaterId)
                        </td>
                        <td class="text-center action-column">
                            <a class="btn btn-warning btn-sm" asp-action="Edit" asp-route-id="@item.Id">Edit</a>
                            <a class="btn btn-info btn-sm" asp-action="Details" asp-route-id="@item.Id">Details</a>
                            <a class="btn btn-danger btn-sm" asp-action="Delete" asp-route-id="@item.Id">Delete</a>
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    </div>

    <!-- Pagination -->
    <div class="d-flex justify-content-center mt-4">
        <ul class="pagination">
            <li class="page-item">
                <a class="page-link" href="#">Previous</a>
            </li>
            <li class="page-item active">
                <a class="page-link" href="#">1</a>
            </li>
            <li class="page-item">
                <a class="page-link" href="#">2</a>
            </li>
            <li class="page-item">
                <a class="page-link" href="#">Next</a>
            </li>
        </ul>
    </div>
</div>



@section Scripts {
    <script>
        // Search function
        document.getElementById('searchInput').addEventListener('keyup', function () {
            let filter = this.value.toLowerCase();
            let rows = document.querySelectorAll("#blogTable tr");

            rows.forEach(row => {
                let title = row.cells[0].textContent.toLowerCase();
                if (title.includes(filter)) {
                    row.style.display = "";
                } else {
                    row.style.display = "none";
                }
            });
        });

        // Filter by Date
        document.getElementById('filterDate').addEventListener('change', function () {
            let filterDate = this.value;
            let rows = document.querySelectorAll("#blogTable tr");

            rows.forEach(row => {
                let rowDate = row.cells[3].getAttribute("data-date");
                if (!filterDate || rowDate === filterDate) {
                    row.style.display = "";
                } else {
                    row.style.display = "none";
                }
            });
        });

        // Reset Filters
        function resetFilters() {
            document.getElementById('searchInput').value = "";
            document.getElementById('filterDate').value = "";
            let rows = document.querySelectorAll("#blogTable tr");
            rows.forEach(row => row.style.display = "");
        }
    </script>
}
